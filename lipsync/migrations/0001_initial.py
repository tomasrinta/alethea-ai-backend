# Generated by Django 3.2 on 2021-06-16 09:52

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('gpt3', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.PositiveSmallIntegerField(choices=[(0, 'Audio'), (1, 'Video')], default=1)),
                ('looping_video', models.FileField(blank=True, null=True, upload_to='preprocessed_data/')),
                ('character_image', models.ImageField(blank=True, null=True, upload_to='character_images/')),
                ('is_google_tts', models.IntegerField(default=0)),
                ('language_code', models.CharField(default='en-US', max_length=50)),
                ('language_name', models.CharField(max_length=50)),
                ('demo_base_url', models.URLField()),
                ('character', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='gpt_speaker_name', to='gpt3.speakers')),
                ('gpt', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gpt_character', to='gpt3.gptcharacter')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UploadRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('file_upload', models.FileField(upload_to='static/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CharacterSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('speak_count', models.IntegerField(default=10)),
                ('inactivity_timeout_duration', models.IntegerField(default=1500)),
                ('given_your_name', models.CharField(default='What is your name ?', max_length=255)),
                ('welcome_message_prefix', models.CharField(default='Welcome', max_length=255)),
                ('welcome_message_surfix', models.CharField(default=' please enable sound and mic to begin your interaction.', max_length=255)),
                ('type_your_name', models.CharField(default='Please type your name, and press Next', max_length=255)),
                ('name_unavailability_title', models.CharField(default='We have not come across that name before, is it ok if it calls you:', max_length=255)),
                ('default_name', models.CharField(default='My Young Apprentice', max_length=255)),
                ('end_of_interaction_response', models.BooleanField(default=False)),
                ('inactivity_response_required', models.BooleanField(default=False)),
                ('random_responses', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('inactivity_response', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('character', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='speaker_seeting', to='gpt3.speakers')),
                ('gpt', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='character_setting', to='lipsync.character')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AudioCharacter',
            fields=[
            ],
            options={
                'verbose_name': 'Audio character',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('lipsync.character',),
        ),
        migrations.CreateModel(
            name='VideoCharacter',
            fields=[
            ],
            options={
                'verbose_name': 'Video character',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('lipsync.character',),
        ),
    ]
